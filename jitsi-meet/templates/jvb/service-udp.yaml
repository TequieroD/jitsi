{{- if or (and (kindIs "invalid" .Values.jvb.service.enabled) (not .Values.jvb.useHostPort)) .Values.jvb.service.enabled }}
{{- range $shardName, $shardConfig := .Values.global.shards }}
{{- $fullShardName := include "jitsi-meet.fullShardName" (dict "root" $ "shardName" $shardName) -}}
{{- with $ }}
{{- $maxReplicas := .Values.jvb.replicaCount -}}
{{- if .Values.jvb.autoscaling.enabled }}
{{- $maxReplicas = .Values.jvb.autoscaling.maxReplicas -}}
{{- end }}
{{- range $replica := (untilStep 0 (int $maxReplicas) 1) }}
{{- with $ }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $fullShardName }}-jvb-udp-{{ $replica }}
  annotations:
  {{- range $key, $value := .Values.jvb.service.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  labels:
    {{- include "jitsi-meet.jvb.labels" . | nindent 4 }}
spec:
  type: {{ .Values.jvb.service.type }}
  {{- with .Values.jvb.service.LoadbalancerIP }}
  loadBalancerIP: {{ . }}
  {{- end }}
  ports:
    {{- $port := add $shardConfig.jvbBasePort $replica }}
    - port: {{ $port }}
      protocol: UDP
      targetPort: {{ $port }}
      {{- if (eq .Values.jvb.service.type "NodePort") }}
      nodePort: {{ $port }}
      {{- end }}
  {{- with .Values.jvb.service.externalIPs }}
  externalIPs:
  {{ toYaml . | indent 2 | trim }}
  {{- end }}
  selector:
    {{- include "jitsi-meet.jvb.selectorLabels" . | nindent 4 }}
    jitsi/component: jvb
    jitsi/shard: "{{ $shardName }}"
    statefulset.kubernetes.io/pod-name: "{{ $fullShardName }}-jvb-{{ $replica }}"
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
