---
# Source: jitsi-meet/charts/prosody/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.2.2
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.13"
    app.kubernetes.io/managed-by: Helm
---
# Source: jitsi-meet/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-jitsi-meet
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
---
# Source: jitsi-meet/charts/prosody/templates/envs-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.2.2
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.13"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: jitsi-meet/templates/jicofo/xmpp-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-prosody-jicofo
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jicofo
type: Opaque
data:
  JICOFO_AUTH_USER: 'Zm9jdXM='
  JICOFO_AUTH_PASSWORD: 'R2NuTkU3Njl1Tg=='
  JICOFO_COMPONENT_SECRET: 'cHhweE5QU2pjSA=='
---
# Source: jitsi-meet/templates/jvb/xmpp-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-prosody-jvb
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
type: Opaque
data:
  JVB_AUTH_USER: 'anZi'
  JVB_AUTH_PASSWORD: 'SHBhZURHb2lxRA=='
---
# Source: jitsi-meet/charts/prosody/templates/envs-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.2.2
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.13"
    app.kubernetes.io/managed-by: Helm
data:
---
# Source: jitsi-meet/templates/common-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-prosody-common
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
data:
  ENABLE_AUTH: "0"
  ENABLE_GUESTS: "1"
  PUBLIC_URL: https://jitsi.dennychen.tw
  XMPP_DOMAIN: meet.jitsi
  XMPP_MUC_DOMAIN: muc.meet.jitsi
  XMPP_AUTH_DOMAIN: auth.meet.jitsi
  XMPP_GUEST_DOMAIN: guest.meet.jitsi
  XMPP_RECORDER_DOMAIN: recorder.meet.jitsi
  XMPP_INTERNAL_MUC_DOMAIN: internal-muc.meet.jitsi
  TZ: 'Europe/Amsterdam'
---
# Source: jitsi-meet/templates/jicofo/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jitsi-meet-jicofo
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jicofo
data:
  JVB_BREWERY_MUC: 'jvbbrewery'
  XMPP_SERVER: 'release-name-prosody.default.svc'
---
# Source: jitsi-meet/templates/jvb/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jitsi-meet-jvb
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
data:
  JVB_BREWERY_MUC: 'jvbbrewery'
  JVB_PORT: '30000'
  JVB_STUN_SERVERS: 'meet-jit-si-turnrelay.jitsi.net:443'
  JVB_DISABLE_STUN: '1'
  JVB_TCP_HARVESTER_DISABLED: '1'
  XMPP_SERVER: 'release-name-prosody.default.svc'
  COLIBRI_REST_ENABLED: 'true'
  ENABLE_COLIBRI_WEBSOCKET: 'true'
  entrypoint.sh: |
    #!/bin/bash
    set -euo pipefail
    # both jq and curl are needed for shutdown hook
    #apt-dpkg-wrap apt-get update && apt-dpkg-wrap apt-get -y install curl jq
    
    # add jvb ID to the base port (e.g. 30300 + 1 = 30301)
    export JVB_PORT=$(($BASE_PORT+${HOSTNAME##*-}))
    echo "JVB_PORT=$JVB_PORT"
    echo "Allowing shutdown of JVB via Rest from localhost..."
    echo "org.jitsi.videobridge.ENABLE_REST_SHUTDOWN=true" >> /defaults/sip-communicator.properties
    echo "org.jitsi.videobridge.shutdown.ALLOWED_SOURCE_REGEXP=127.0.0.1" >> /defaults/sip-communicator.properties
    echo "org.ice4j.ice.harvest.DISABLE_AWS_HARVESTER=true" >> /defaults/sip-communicator.properties
    exec "$@"
  graceful_shutdown.sh: |
    #!/bin/bash
    #
    # 1. The script issues shutdown command to the bridge over REST API.
    #    If HTTP status code other than 200 is returned then it exits with 1.
    # 2. If the code is ok then it checks if the bridge has exited.
    # 3. If not then it polls bridge statistics until conference count drops to 0.
    # 4. Gives some time for the bridge to shutdown. If it does not quit after that
    #    time then it kills the process. If the process was successfully killed 0 is
    #    returned and 1 otherwise.
    #
    #   Arguments:
    #   "-p"(mandatory) the PID of jitsi Videobridge process
    #   "-h"("http://localhost:8080" by default) REST requests host URI part
    #   "-t"("25" by default) number of second we we for the bridge to shutdown
    #       gracefully after conference count drops to 0
    #   "-s"(disabled by default) enable silent mode - no info output
    #
    #   NOTE: script depends on the tools jq, used to parse json, and curl
    #
    
    # Initialize arguments
    hostUrl="http://localhost:8080"
    timeout=25
    verbose=1
    
    # Parse arguments
    OPTIND=1
    while getopts "p:h:t:s" opt; do
        case "$opt" in
        p)
            pid=$OPTARG
            ;;
        h)
            hostUrl=$OPTARG
            ;;
        t)
            timeout=$OPTARG
            ;;
        s)
            verbose=0
            ;;
        *)
            echo "usage: $0 [-p] [-h] [-t] [-s]" >&2
            exit 1
            ;;
        esac
    done
    shift "$((OPTIND-1))"
    
    # Get PID from supervisor if no PID was provided
    if [ "$pid" = "" ] ;then
        pid=`s6-svstat -o pid /var/run/s6/services/jvb`
    fi
    
    # Check if PID is a number
    re='^[0-9]+$'
    if ! [[ $pid =~ $re ]] ; then
       echo "error: PID is not a number" >&2; exit 1
    fi
    
    # Returns conference count by calling JVB REST statistics API and extracting
    # conference count from JSON stats text returned.
    function getConferenceCount {
        # Total number of conferences minus the empty conferences
        curl -s "$hostUrl/colibri/stats"| jq '.conferences - .conference_sizes[0]'
    }
    
    # Prints info messages
    function printInfo {
      if [ "$verbose" == "1" ]
      then
        echo "$@"
      fi
    }
    
    # Prints errors
    function printError {
      echo "$@" 1>&2
    }
    
    shutdownStatus=`curl -s -o /dev/null -H "Content-Type: application/json" -d '{ "graceful-shutdown": "true" }' -w "%{http_code}" "$hostUrl/colibri/shutdown"`
    if [ "$shutdownStatus" == "200" ]
    then
      printInfo "Graceful shutdown started"
    
      # turn off automatic restart of JVB service
      s6-svc -O /var/run/s6/services/jvb
    
      confCount=`getConferenceCount`
      while [[ $confCount -gt 0 ]] ; do
        printInfo "There are still $confCount conferences"
        sleep 10
        confCount=`getConferenceCount`
      done
    
      sleep 5
    
      jvbAvailable=`curl -s -o /dev/null -w "%{http_code}" "$hostUrl/colibri/stats"`
      if [ "$jvbAvailable" == "200" ]
      then
        printInfo "It is still running, lets give it $timeout seconds"
        sleep $timeout
        jvbAvailable=`curl -s -o /dev/null -w "%{http_code}" "$hostUrl/colibri/stats"`
        if [ "$jvbAvailable" == "200" ]
        then
          printError "Bridge did not exit after $timeout sec - killing $pid"
        fi
      fi
      kill $pid
    
      # check for 3 seconds if we managed to kill
      for I in 1 2 3
      do
        if ps -p $pid > /dev/null 2>&1
        then
          sleep 1
        fi
      done
      if ps -p $pid > /dev/null 2>&1
      then
        printError "Failed to kill $pid"
        printError "Sending force kill to $pid"
        kill -9 $pid
        if ps -p $pid > /dev/null 2>&1
        then
          printError "Failed to force kill $pid, giving up."
          exit 1
        fi
      fi
      printInfo "Bridge shutdown OK"
      exit 0
    else
      printError "Invalid HTTP status for shutdown request: $shutdownStatus"
      exit 1
    fi
---
# Source: jitsi-meet/templates/web/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
data:
  DISABLE_HTTPS: "1"
  ENABLE_HTTP_REDIRECT: "0"
  JICOFO_AUTH_USER: 'focus'
  XMPP_BOSH_URL_BASE: 'http://release-name-prosody.default.svc:5280'
---
# Source: jitsi-meet/charts/prosody/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.2.2
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.13"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5280
      protocol: TCP
      name: tcp-bosh-insecure
    - port: 5281
      protocol: TCP
      name: tcp-bosh-secure
    - port: 5347
      protocol: TCP
      name: tcp-xmpp-component
    - port: 5222
      protocol: TCP
      name: tcp-xmpp-c2
    - port: 5269
      protocol: TCP
      name: tcp-xmpp-s2
  selector:
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-0
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30000
      protocol: UDP
      targetPort: 30000
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-0"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-1
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30001
      protocol: UDP
      targetPort: 30001
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-1"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-2
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30002
      protocol: UDP
      targetPort: 30002
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-2"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-3
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30003
      protocol: UDP
      targetPort: 30003
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-3"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-4
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30004
      protocol: UDP
      targetPort: 30004
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-4"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-5
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30005
      protocol: UDP
      targetPort: 30005
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-5"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-6
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30006
      protocol: UDP
      targetPort: 30006
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-6"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-7
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30007
      protocol: UDP
      targetPort: 30007
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-7"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-8
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30008
      protocol: UDP
      targetPort: 30008
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-8"
---
# Source: jitsi-meet/templates/jvb/service-udp.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-udp-9
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: LoadBalancer
  loadBalancerIP: 35.239.239.155
  ports:
    - port: 30009
      protocol: UDP
      targetPort: 30009
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-9"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-0
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-0"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-1
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-1"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-2
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-2"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-3
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-3"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-4
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-4"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-5
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-5"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-6
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-6"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-7
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-7"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-8
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-8"
---
# Source: jitsi-meet/templates/jvb/service-websocket.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-shard-0-jvb-ws-9
  annotations:
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
spec:
  type: ClusterIP
  ports:
    - port: 9090
      protocol: TCP
      name: colibri-ws-tcp
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: jvb
    jitsi/component: jvb
    jitsi/shard: "shard-0"
    statefulset.kubernetes.io/pod-name: "release-name-jitsi-meet-shard-0-jvb-9"
---
# Source: jitsi-meet/templates/web/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: web
---
# Source: jitsi-meet/templates/jicofo/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jitsi-meet-jicofo
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jicofo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: jicofo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: jicofo
      annotations:
        checksum/config: 1956e78c8a283519581097b387c7bcb726e81667204667f3e6a26a1e58e576cc
        checksum/secret: 409bf898429e8329da1b23f62a84e2eaa253a22b04ac0eb714b28cd8f4fc8083
    spec:
      serviceAccountName: release-name-jitsi-meet
      securityContext:
        {}
      containers:
        - name: jitsi-meet
          securityContext:
            {}
          image: "jitsi/jicofo:stable-7648-4"
          imagePullPolicy: IfNotPresent
          envFrom:
          - secretRef:
              name: release-name-prosody-jicofo
          - configMapRef:
              name: release-name-prosody-common
          - configMapRef:
              name: release-name-jitsi-meet-jicofo
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8888
          readinessProbe:
            tcpSocket:
              port: 8888
          resources:
            {}
---
# Source: jitsi-meet/templates/web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: web
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: web
      annotations:
        checksum/config: 2e41c9019d6439f09adcfd38fc729d963b7ccd4fe6225819ddce3978b217b6c9
    spec:
      serviceAccountName: release-name-jitsi-meet
      securityContext:
        {}
      containers:
        - name: jitsi-meet
          securityContext:
            {}
          image: "dennychen/jitsi-web:stable-7648-4"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: release-name-jitsi-meet-web
          - configMapRef:
              name: release-name-prosody-common
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources:
            {}
---
# Source: jitsi-meet/templates/jvb/hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-jitsi-meet-shard-0-jvb
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    jitsi/component: jvb
    jitsi/shard: "shard-0"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: release-name-jitsi-meet-shard-0-jvb
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
# Source: jitsi-meet/charts/prosody/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-prosody
  labels:
    helm.sh/chart: prosody-1.2.2
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.13"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: "prosody"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prosody
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prosody
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-prosody
      securityContext:
        {}
      containers:
        - name: prosody
          securityContext:
            {}
          image: "jitsi/prosody:stable-7648-4"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: release-name-prosody
          - secretRef:
              name: release-name-prosody
          - secretRef:
              name: 'release-name-prosody-jicofo'
          - secretRef:
              name: 'release-name-prosody-jvb'
          - configMapRef:
              name: 'release-name-prosody-common'
          ports:
            - name: xmpp-c2s
              containerPort: 5222
              protocol: TCP
            - name: xmpp-s2s
              containerPort: 5269
              protocol: TCP
            - name: xmpp-component
              containerPort: 5347
              protocol: TCP
            - name: bosh-insecure
              containerPort: 5280
              protocol: TCP
            - name: bosh-secure
              containerPort: 5281
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /http-bind
              port: bosh-insecure
          readinessProbe:
            httpGet:
              path: /http-bind
              port: bosh-insecure
          resources:
            {}
          volumeMounts:
          - name: prosody-data
            mountPath: /config/data
      volumes:
      - name: prosody-data
        emptyDir: {}
---
# Source: jitsi-meet/templates/jvb/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  generation: 1
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: jvb
  name: release-name-jitsi-meet-shard-0-jvb
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: jitsi-meet
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: jvb
      jitsi/component: jvb
      jitsi/shard: "shard-0"
  serviceName: release-name-jitsi-meet-shard-0-jvb
  template:
    metadata:
      annotations:
        checksum/config: 9f3dd913646b2f10731bb4ab3685a83ecae0041911fb5fc798cacdf4cabb1f12
        checksum/secret: 3f4ec90cd1c5e1af0ecc596d2a49d8c2d1f2e87f899481f3816738d485ce3483
      labels:
        app.kubernetes.io/name: jitsi-meet
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: jvb
        jitsi/shard: "shard-0"
        jitsi/component: jvb
    spec:
      containers:
      - args:
        - /init
        command:
        - /entrypoint/entrypoint.sh
        envFrom:
        - secretRef:
            name: release-name-prosody-jvb
        - configMapRef:
            name: release-name-prosody-common
        - configMapRef:
            name: release-name-jitsi-meet-jvb
        env:
        - name: BASE_PORT
          value: "30000"
        - name: DOCKER_HOST_ADDRESS
          value: 35.239.239.155
        - name: JVB_WS_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: "jitsi/jvb:stable-7648-4"
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - /shutdown/graceful_shutdown.sh
              - -t 3
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /about/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: jitsi
        ports:
        - containerPort: 9090
          name: http
          protocol: TCP
        - containerPort: 8080
          name: admin
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /about/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 200m
              memory: 200Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /entrypoint/entrypoint.sh
          name: jvb
          subPath: entrypoint.sh
          
        - mountPath: /shutdown/graceful_shutdown.sh
          name: jvb
          subPath: graceful_shutdown.sh
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 3600
      volumes:
        - name: jvb
          configMap:
            name: release-name-jitsi-meet-jvb
            items:
              - key: entrypoint.sh
                path: entrypoint.sh
                mode: 0744
              - key: graceful_shutdown.sh
                path: graceful_shutdown.sh
                mode: 0744
  updateStrategy:
    type: RollingUpdate
---
# Source: jitsi-meet/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-jitsi-meet-web
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
spec:
  rules:
    - host: "jitsi.dennychen.tw"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
            
              service:
                name: release-name-jitsi-meet-web
                port:
                  
                  number: 80
---
# Source: jitsi-meet/templates/certificate.yaml
apiVersion: networking.k8s.io/v1
kind: ManagedCertificate
metadata:
  name: jitsi-web-certificate
spec:
  domains:
    - "jitsi.dennychen.tw"
---
# Source: jitsi-meet/charts/prosody/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-prosody-test-connection"
  labels:
    helm.sh/chart: prosody-1.2.2
    app.kubernetes.io/name: prosody
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.11.13"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-prosody:5280']
  restartPolicy: Never
---
# Source: jitsi-meet/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-jitsi-meet-web-test-connection"
  labels:
    helm.sh/chart: jitsi-meet-1.2.2
    app.kubernetes.io/name: jitsi-meet
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "stable-7648-4"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: web
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-jitsi-meet-web:80']
  restartPolicy: Never
